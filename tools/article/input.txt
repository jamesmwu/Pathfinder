<h3>Getting Your First Software Engineer Internship

<p>Getting a SWE internship during your college years is seen as one of the most important parts of a CS education. Besides the pay, internships show to future employers that you have relevant work experience, greatly boosting your resume and chances of future employment. In fact, getting an internship is so important that many regard it as more important than GPA. In this article, we will discuss the process of getting internships, as well as some tips to help you along your journey. 

<h4>When Should I Be Looking For an Internship?
<p>With regards to summer internships, companies like to look for rising seniors, because typically the purpose of internship programs (at least in mid to large businesses) is to look for future employees who can potentially join the company the following year after graduation. Recruiting season typically takes place the previous fall, with many companies also having a summer recruiting season. Typically, this means you will want to prepare for the interview process as early on as possible. A sample timeline would look like this:
<ul>Sophomore Fall/Spring: preparing for interviews
<ul>Junior Summer/Fall: going through the interview process
<ul>Senior Summer: internship time!
<ul>After graduation: return offer?
<p>Even if you are not a rising senior, feel free to apply! Though it is true that rising seniors are favored, plenty of rising juniors (myself included), have gotten internship opportunities. If you expect to graduate early, then this timeline is unfortunately moved up one year for you. This is one of the disadvantages of graduating early: you will not have as much time.

<p>Naturally, as the field grows more and more competitive, people are always looking for an edge against their peers. This means that many CS students end up looking for internships earlier. There are certain programs that are targeted towards underclassmen, like Amazon Propel or FaceBook University. These programs are quite difficult to get in, simply because of the vast amount of applications that these companies receive. Another option for people wishing to get in on the action earlier are startups. Startups are typically less picky, at least about the year requirement. Another option to get involved earlier on is summer research. 




<h3>The Interview Process
<p>Typically, the process of getting an internship follows a formulaic pattern:
<ol>Submit application
<ol>Resume screen
<ol>Multiple rounds of interview
<ol>Acceptance.

<h4>Submitting an Application
<p>There are many ways of applying for internships. Sites like LinkedIn, Indeed, and Handshake offer platforms for people to search for suitable companies. One of the best resources for finding internships is https://github.com/pittcsc, Run by the Pitt CS club from the University of Pittsburgh, this is one of the largest internship repositories available. It contains repositories for each season, so check frequently for new updates on application openings. Many of the links on this repository link to applications on the company website.
<h4>Resume Screen
<p>A resume is the most important part of your application. It is a summary of your ability, and it determines whether or not they even give you a chance of moving on to the interview process. Many large companies use AI/ML algorithms to parse your resume, so there is no need to make it look aesthetically pleasing. The most important thing is to illustrate your abilities and experience in a clear and concise way; make it easier to parse so the algorithms don’t miss anything. 

<h4>Interviews
<p>All interviews roughly fall into two different categories: technical and soft skills. Companies will typically have both. There may be multiple of each. They may also be in the same interview session.They may be live, or asynchronous. It all depends on the company in question. 

<h4>Accepting an Offer
<p>After you go through with the process, hopefully you should end up with an offer. At this point, you have to make a decision: Do I continue looking for something better, or do I settle? Most companies will give you a deadline for accepting their offer. It is typically not a good idea to accept an offer, then renege on that offer for another company. Doing so will most likely put you in a bad light with the company that you turned down. If that is not a concern, then go ahead and renege all you like. 
<h3>Resumes
<p>Oftentimes, people who are looking for their first internship wonder what they can put on their resumes, given their lack of professional experience. There are a variety of things that people can put, including:
<ul>Personal projects
<ul>Club projects
<ul>Academic research
<p>If you have good planning, you should pick out projects that include the relevant skills that internships want. For example, if you are planning to go for a Full-Stack SWE internship, perhaps have a MERN app or two on your resume. If you want to deal with ML/AI, make sure you have something that illustrates your experience in those fields.

<p>When writing about projects, be sure to include concrete examples of contribution or impact. If you’ve built an app that has active users, write how many there are. If you improved the speed of a certain algorithm in a research lab, include a percent speed-up. Numbers and figures quantify your impact, showing that you actually did something. 

<p>Unpaid internships at startups are also an option to gain experience and resume material. Though it is always good to be paid, sometimes for a first work experience you have no real choice but to bite the bullet.

<p>The resume itself should be one page, single sided. It should be in a format that is easily parsed. There are some resume parsers online you can try out. Another thing you can do is to try saving your resume as plain text, then checking if it is legible. 

<p>Here is a sample resume structure:
<ul>Header: include your name, email, phone number, and other links (website, github, linkedin, etc.)
<ul>Education: School, graduation date, GPA (if your GPA is bad feel free to omit it), relevant coursework
<ul>Experience: This should be the meat of your resume. Include jobs, past internships, research, volunteer
<ul>Personal Projects: A great way to buff up your resume if you don’t have past experience. Include technical descriptions of each project
<ul>Skills: What tech stacks/ programming languages are you fluent in?

<p>Some general tips:
<ul>Show your impact! What exactly did you do? How did you impact the team/project?
<ul>Quantify your work with numbers whenever possible.
<ul>Keep formatting simple. Stick with one font. 
<h3>Interviews
<h4>Technical Interviews
<p>Typically, SWE technical interviews will be algorithmic in nature. Some take the form of an asynchronous, online exam that you have to take, or a virtual call where you have to solve various programming problems, usually under the supervision of an employee or recruiter. Focus on taking classes at your university that include topics like Data Structures and Algorithms. Things like graphs, trees, linked lists, and dynamic programming are all common topics seen in interviews. To prepare for these questions, the most commonly used tool is leetcode.com. This site provides a large repository of questions to practice on. Anyone can solve questions on leetcode for free, but some services like solution documents require a premium subscription. Generally, the consensus is that Leetcode Premium is worth it, but it is also possible to study without it.

<p>Other technical interview formats may be non-programming. This may include conceptual questions about CS concepts. Be sure to do research on companies and their interview process, so you know what to expect and what to study for.

<h4>Soft-Skills Interview
<p>Typically, part of the interview process will include behavioral questions. These may include questions about past experience/ interests/ why you want to join the company. Be sure to have certain answers memorized. Why are you a good fit for this company? What experience do you have, and why will that help you succeed in this role? Companies in general look for team players who can cooperate with others, what past experience do you have working with others? This is an example of how internships have a snowball effect: the more internships you have, the more you can talk about, meaning more opportunities in the future. If you do not have previous internship experience, try to talk about things like personal projects and club activities. 

<h3>Frequently Asked Questions
<ul>Q: Does GPA matter when you apply to companies?
<ul>A: Typically it does not make a large impact. While it is always good to have a high GPA, not all companies care. There are exceptions to this, including, but not limited to: Banks, Quant firms, etc.
<ul>Q: How much can I expect to earn from a SWE internship?
<ul>A: It depends. Salary is quite variable, but the average salary is between 30-40 dollars an hour, 50-70 for big tech companies like Amazon, Google, Apple, etc., and 70+ for quant firms.
<ul>Q: How many internships should I apply to?
<ul>A: As many as it takes to get one. Most people apply to at least 30 companies. I have people apply to hundreds of companies in one season. Do not be discouraged by companies ghosting you or rejecting you in droves. This is normal. It is a numbers game. Keep applying.
<ul>Q: I couldn’t find an internship. Am I doomed?
<ul>A: No. Internships are a way to make yourself more marketable to employers in the future. That being said, even if you don't have internship experience, you can still find job opportunities. You might be slightly more limited in the companies that accept you initially, but it is still possible to build a career. 

